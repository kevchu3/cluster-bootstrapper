---

- name: Bootstrap OpenShift
  hosts: localhost
  connection: local
  gather_facts: no
  collections:
    - community.okd

  vars:
    openshift_api_url: "{{ lookup('ansible.builtin.env', 'OPENSHIFT_API_URL') }}"
    openshift_token: "{{ lookup('ansible.builtin.env', 'OPENSHIFT_TOKEN') }}"
    openshift_validate_certs: false
  vars_files:
    - vars.yaml

  tasks:

    - name: Ensure GitOps Namespace
      community.okd.k8s:
        host: "{{ openshift_api_url }}"
        api_key: "{{ openshift_token }}"
        validate_certs: "{{ openshift_validate_certs }}"
        state: present
        src: "manifests/gitops/namespace.yaml"

    - name: Ensure ARGOCD Subscription
      community.okd.k8s:
        host: "{{ openshift_api_url }}"
        api_key: "{{ openshift_token }}"
        validate_certs: "{{ openshift_validate_certs }}"
        state: present
        src: "manifests/gitops/subscription.yaml"

    - name: Ensure Creator RBAC
      community.okd.k8s:
        host: "{{ openshift_api_url }}"
        api_key: "{{ openshift_token }}"
        validate_certs: "{{ openshift_validate_certs }}"
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: argocd-admin-binding
          subjects:
            - kind: ServiceAccount
              name: openshift-gitops-argocd-application-controller
              namespace: openshift-gitops
          roleRef:
            kind: ClusterRole
            name: cluster-admin
            apiGroup: rbac.authorization.k8s.io

    - name: Ensure External Secrets Subscription
      community.okd.k8s:
        host: "{{ openshift_api_url }}"
        api_key: "{{ openshift_token }}"
        validate_certs: "{{ openshift_validate_certs }}"
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: external-secrets-operator
            namespace: openshift-operators
          spec:
            channel: stable
            installPlanApproval: Automatic
            name: external-secrets-operator
            source: community-operators
            sourceNamespace: openshift-marketplace

    # - name: Ensure External Secrets Operator
    #   community.okd.k8s:
    #     host: "{{ openshift_api_url }}"
    #     api_key: "{{ openshift_token }}"
    #     validate_certs: "{{ openshift_validate_certs }}"
    #     state: present
    #     definition:
    #       apiVersion: operator.external-secrets.io/v1alpha1
    #       kind: OperatorConfig
    #       metadata:
    #         name: external-secrets
    #         namespace: openshift-operators
    #       spec:
    #         affinity: {}
    #         certController:
    #           affinity: {}
    #           create: true
    #           deploymentAnnotations: {}
    #           extraArgs: {}
    #           extraEnv: []
    #           fullnameOverride: ''
    #           image:
    #             pullPolicy: IfNotPresent
    #             repository: ghcr.io/external-secrets/external-secrets
    #             tag: ''
    #           imagePullSecrets: []
    #           nameOverride: ''
    #           nodeSelector: {}
    #           podAnnotations: {}
    #           podLabels: {}
    #           podSecurityContext: {}
    #           priorityClassName: ''
    #           prometheus:
    #             enabled: false
    #             service:
    #               port: 8080
    #           rbac:
    #             create: true
    #           requeueInterval: 5m
    #           resources: {}
    #           securityContext: {}
    #           serviceAccount:
    #             annotations: {}
    #             create: true
    #             name: ''
    #           tolerations: []
    #         concurrent: 1
    #         controllerClass: ''
    #         crds:
    #           createClusterExternalSecret: true
    #           createClusterSecretStore: true
    #         createOperator: true
    #         deploymentAnnotations: {}
    #         extraArgs: {}
    #         extraEnv: []
    #         fullnameOverride: ''
    #         image:
    #           pullPolicy: IfNotPresent
    #           repository: ghcr.io/external-secrets/external-secrets
    #           tag: ''
    #         imagePullSecrets: []
    #         installCRDs: false
    #         leaderElect: false
    #         nameOverride: ''
    #         nodeSelector: {}
    #         podAnnotations: {}
    #         podLabels: {}
    #         podSecurityContext: {}
    #         priorityClassName: ''
    #         processClusterExternalSecret: true
    #         processClusterStore: true
    #         prometheus:
    #           enabled: false
    #           service:
    #             port: 8080
    #         rbac:
    #           create: true
    #         replicaCount: 1
    #         resources: {}
    #         scopedNamespace: ''
    #         scopedRBAC: false
    #         securityContext: {}
    #         serviceAccount:
    #           annotations: {}
    #           create: true
    #           name: ''
    #         tolerations: []
    #         webhook:
    #           affinity: {}
    #           certCheckInterval: 5m
    #           certDir: /tmp/certs
    #           create: true
    #           deploymentAnnotations: {}
    #           extraArgs: {}
    #           extraEnv: []
    #           fullnameOverride: ''
    #           image:
    #             pullPolicy: IfNotPresent
    #             repository: ghcr.io/external-secrets/external-secrets
    #             tag: ''
    #           imagePullSecrets: []
    #           nameOverride: ''
    #           nodeSelector: {}
    #           podAnnotations: {}
    #           podLabels: {}
    #           podSecurityContext: {}
    #           priorityClassName: ''
    #           prometheus:
    #             enabled: false
    #             service:
    #               port: 8080
    #           rbac:
    #             create: true
    #           replicaCount: 1
    #           resources: {}
    #           securityContext: {}
    #           serviceAccount:
    #             annotations: {}
    #             create: true
    #             name: ''
    #           tolerations: []

    # - name: Ensure Azure Key Vault Secret
    #   community.okd.k8s:
    #     host: "{{ openshift_api_url }}"
    #     api_key: "{{ openshift_token }}"
    #     validate_certs: "{{ openshift_validate_certs }}"
    #     state: present
    #     definition:
    #       apiVersion: v1
    #       data:
    #         client-id: "{{ root_vault.client_id }}"
    #         client-secret: "{{ root_vault.client_secret }}"
    #       kind: Secret
    #       metadata:
    #         creationTimestamp: null
    #         name: azure-eso-secret
    #         namespace: openshift-operators

    # - name: Ensure External Secrets Subscription
    #   community.okd.k8s:
    #     host: "{{ openshift_api_url }}"
    #     api_key: "{{ openshift_token }}"
    #     validate_certs: "{{ openshift_validate_certs }}"
    #     state: present
    #     definition:
    #       apiVersion: external-secrets.io/v1alpha1
    #       kind: ClusterSecretStore
    #       metadata:
    #         name: eso-secret-store
    #         namespace: openshift-operators
    #       spec:
    #         provider:
    #           azurekv:
    #             tenantId: "{{ root_vault.tenant_id }}"
    #             vaultUrl: "{{ root_vault.vault_url }}"
    #             authSecretRef:
    #               clientId:
    #                 name: azure-eso-secret
    #                 key: client-id
    #               clientSecret:
    #                 name: azure-eso-secret
    #                 key: client-secret

    # - name: Ensure Test Secret 
    #   community.okd.k8s:
    #     host: "{{ openshift_api_url }}"
    #     api_key: "{{ openshift_token }}"
    #     validate_certs: "{{ openshift_validate_certs }}"
    #     state: absent
    #     definition:
    #       apiVersion: external-secrets.io/v1beta1
    #       kind: ExternalSecret
    #       metadata:
    #         name: eso-external-secret
    #         namespace: openshift-operators
    #       spec:
    #         refreshInterval: "1h"
    #         secretStoreRef:
    #           name: eso-secret-store
    #           kind: ClusterSecretStore
    #         target:
    #           name: example-secret
    #           creationPolicy: Owner
    #         data:
    #         - secretKey: example
    #           remoteRef:
    #             key: secret/github-pat

    # - name: Ensure Repository Connection 
    #   community.okd.k8s:
    #     host: "{{ openshift_api_url }}"
    #     api_key: "{{ openshift_token }}"
    #     validate_certs: "{{ openshift_validate_certs }}"
    #     state: present
    #     definition:
    #       apiVersion: external-secrets.io/v1beta1
    #       kind: ExternalSecret
    #       metadata:
    #         name: source-control-connection
    #         namespace: openshift-gitops
    #         annotations:
    #           argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    #         labels:
    #           argocd.argoproj.io/secret-type: repository
    #           repo: source-control-connection
    #           type: apps-controller
    #       spec:
    #         refreshInterval: 1h
    #         secretStoreRef:
    #           name: eso-secret-store
    #           kind: ClusterSecretStore
    #         target:
    #           name: source-control-connection
    #           creationPolicy: Owner
    #         data:
    #           - remoteRef:
    #               key: secret/type
    #             secretKey: type
    #           - remoteRef:
    #               key: secret/github-pat
    #             secretKey: password
    #           - remoteRef:
    #               key: secret/github-username
    #             secretKey: username
    #           - remoteRef:
    #               key: secret/repo-url
    #             secretKey: url
    #           - remoteRef:
    #               key: secret/project
    #             secretKey: project
