---

- name: Cert - Encrypt EC private key
  community.crypto.openssl_privatekey:
    path: encrypted_ca_key.pem
    type: ECC
    curve: secp256r1
    cipher: auto
    passphrase: "{{ openshift.cert_passphrase }}"

- name: Cert - Generate an OpenSSL CSR using the encrypted private key
  community.crypto.openssl_csr:
    path: csr.pem
    privatekey_path: encrypted_ca_key.pem
    privatekey_passphrase: "{{ openshift.cert_passphrase }}"
    common_name: "*.apps.{{ openshift.domain }}"
    organization_name: "Red Hat"
    email_address: "admin@redhat.com"

# - name: Cert - Generate a Self-Signed Certificate
#   community.crypto.x509_certificate:
#     path: ca_cert.pem
#     privatekey_path: encrypted_ca_key.pem
#     privatekey_passphrase: "{{ openshift.cert_passphrase }}"
#     provider: selfsigned
#     csr_path: csr.pem
#     selfsigned_digest: sha256
#     selfsigned_not_after: "+1024d"
#     selfsigned_version: 3
#     keyUsage:
#       - keyCertSign
#       - cRLSign

- name: Cert - Create CA Cert
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: ca-key-pair
        namespace: "openshift-operators"
      data:
        ca.crt: "{{ lookup('file', 'ca_cert.pem') | b64encode }}"
        ca.key: "{{ lookup('file', 'encrypted_ca_key.pem') | b64encode }}"
        password: "{{ 'cbe204224' | b64encode }}"
