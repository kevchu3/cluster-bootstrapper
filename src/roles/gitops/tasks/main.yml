---

- name: OpenShift GitOps - Ensure GitOps Namespace
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ openshift.services.gitops.namespace }}"

- name: OpenShift GitOps - Ensure GitOps Subscription
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: "{{ openshift.services.gitops.namespace }}"
        namespace: "openshift-operators"
      spec:
        channel: "{{ openshift.services.gitops.channel }}"
        installPlanApproval: Automatic
        name: "openshift-gitops-operator"
        source: redhat-operators
        sourceNamespace: openshift-marketplace

- name: OpenShift GitOps - Ensure Admin RBAC
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: "{{ openshift.services.gitops.namespace }}-cluster-admin-binding"
      subjects:
        - kind: ServiceAccount
          name: "{{ openshift.services.gitops.namespace }}-argocd-application-controller"
          namespace: "{{ openshift.services.gitops.namespace }}"
      roleRef:
        kind: ClusterRole
        name: cluster-admin
        apiGroup: rbac.authorization.k8s.io

- name: OpenShift GitOps - Wait for CRD Exists
  community.kubernetes.k8s_info:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "argocds.argoproj.io"
  register: argocd_crd
  until: argocd_crd.resources | length > 0
  retries: 10
  delay: 10

- name: OpenShift GitOps - Enable Kustomization Helm Patch
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: argoproj.io/v1beta1
      kind: ArgoCD
      metadata:
        name: "{{ openshift.services.gitops.namespace }}"
        namespace: "{{ openshift.services.gitops.namespace }}"
      spec:
        server:
          route:
            enabled: true
          insecure: true
        kustomizeBuildOptions: '--enable-helm'

- name: GitOps - Cold Boot ACM
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: "boot"
        namespace: "{{ openshift.services.gitops.namespace }}"
      spec:
        destination:
          namespace: "{{ openshift.services.gitops.namespace }}"
          server: 'https://kubernetes.default.svc'
        source:
          chart: boot
          repoURL: "https://poc-examples.github.io/charts"
          version: v3
          targetRevision: "{{ openshift.services.boot.chartVersion }}"
          helm:
            parameters:
              - name: domain
                value: "{{ openshift.domain }}"
        project: default
        syncPolicy:
          automated:
            prune: false
            selfHeal: true
          managedNamespaceMetadata:
            labels:
              argocd.argoproj.io/managed-by: "{{ openshift.services.gitops.namespace }}"
          syncOptions:
            - CreateNamespace=false
            - Validate=false
            - SkipDryRunOnMissingResource=true

# ## MOVE ME TO POLICIES
# - name: OpenShift GitOps - Ensure Image Updater
#   community.okd.k8s:
#     host: "{{ openshift.api_url }}"
#     api_key: "{{ openshift.token }}"
#     validate_certs: "{{ openshift.validate_certs }}"
#     state: "{{ state }}"
#     definition:
#       apiVersion: argoproj.io/v1alpha1
#       kind: Application
#       metadata:
#         name: "image-updater-plugin"
#         namespace: "{{ openshift.services.gitops.namespace }}"
#         labels:
#           type: plugin
#       spec:
#         destination:
#           namespace: "{{ openshift.services.gitops.namespace }}"
#           server: 'https://kubernetes.default.svc'
#         source:
#           repoURL: "https://github.com/poc-examples/continuous-delivery"
#           path: "image-updater"
#           version: v3
#           targetRevision: HEAD
#         project: default
#         syncPolicy:
#           automated:
#             selfHeal: true
#           managedNamespaceMetadata:
#             labels:
#               argocd.argoproj.io/managed-by: "{{ openshift.services.gitops.namespace }}"
#           syncOptions:
#             - CreateNamespace=false
#             # - ServerSideApply=true # Allows patching in the namespace
#   when: openshift.services.gitops.updater.enabled is defined and openshift.services.gitops.updater.enabled is true
