---

- name: Setup Base Operators
  hosts: localhost
  connection: local
  gather_facts: yes
  collections:
    - community.okd
    - community.kubernetes
    - community.general

  vars:
    state: present
  
  vars_files:
    - ../vars.yaml

  tasks:

    - name: Get Terraform Outputs
      ansible.builtin.shell:
        cmd: "terraform output -json"
        chdir: "../terraform"
      register: tf_outputs

    - name: Convert JSON output to Dictionary
      ansible.builtin.set_fact:
        terraform_outputs: "{{ tf_outputs.stdout | from_json }}"

    # - name: Print Terraform Outputs
    #   ansible.builtin.debug:
    #     msg: "{{ terraform_outputs }}"

    - name: Login to OpenShift
      ansible.builtin.shell:
        cmd: >
          oc login https://api.{{ terraform_outputs.domain.value }}:6443 \
            --username={{ openshift.admin_credentials.username }} \
            --password={{ openshift.admin_credentials.password }} \
            --insecure-skip-tls-verify=true
      register: login_output
      until: "'Login successful' in login_output.stdout"
      retries: 10
      delay: 30
      ignore_errors: yes

    - name: Get the user token
      ansible.builtin.shell:
        cmd: oc whoami -t
      register: oc_token
      changed_when: false

    - name: Set Token
      ansible.builtin.set_fact:
        token: "{{ oc_token.stdout }}"

    - name: debug
      debug:
        msg: "{{token}}"

    ## RedHat Supported
    ## Creates OpenShift GitOps Services With Cluster-Admin Permissions
    ## Patches ArgoCD to use kustomize with helm plugin
    ## Optionally - Also installs Image-Updater
    - name: IRSA
      ansible.builtin.include_role:
        name: irsa
      when:
        - openshift.services.boot.irsa is defined
        - openshift.services.boot.irsa is true

    ## RedHat Supported
    ## Creates OpenShift GitOps Services With Cluster-Admin Permissions
    ## Patches ArgoCD to use kustomize with helm plugin
    ## Optionally - Also installs Image-Updater
    - name: GitOps
      vars:
        domain: "{{ terraform_outputs.domain.value }}"
        api_url: "https://api.{{ terraform_outputs.domain.value }}:6443"
      ansible.builtin.include_role:
        name: gitops
      when:
        - openshift.services.gitops.enabled is defined
        - openshift.services.gitops.enabled is true

    ## RedHat Supported
    ## Boots Initial Secrets
    - name: Secrets
      vars:
        domain: "{{ terraform_outputs.domain.value }}"
        api_url: "https://api.{{ terraform_outputs.domain.value }}:6443"
      ansible.builtin.include_role:
        name: secrets
      # when:
      #   - openshift.services.gitops.enabled is defined
      #   - openshift.services.gitops.enabled is true

    # Accepts a defined list of repositories and Imports them into GitLab.
    - name: Import Repositories
      vars:
        domain: "{{ terraform_outputs.domain.value }}"
        api_url: "https://api.{{ terraform_outputs.domain.value }}:6443"
      ansible.builtin.include_role:
        name: imports
      # when:
      #   - openshift.services.gitlab.enabled is defined
      #   - openshift.services.gitlab.enabled is true
