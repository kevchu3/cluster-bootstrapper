---

- name: Get cluster infrastructure details
  uri:
    url: "{{openshift.api_url}}/apis/config.openshift.io/v1/infrastructures/cluster"
    method: GET
    headers:
      Authorization: "Bearer {{ openshift.token }}"
      Accept: "application/json"
    validate_certs: no
    status_code: 200
  register: infra_details
  ignore_errors: yes
  when: openshift.token is defined

- name: Machines - Fetch Existing Worker MachineSet Information
  community.kubernetes.k8s_info:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    api_version: machine.openshift.io/v1beta1
    kind: MachineSet
    namespace: openshift-machine-api
    label_selectors:
      - "machine.openshift.io/cluster-api-machine-role=worker"
  register: existing_machinesets
  when: openshift.token is defined

- name: SET FACTS
  set_fact:
    provider_spec: "{{ existing_machinesets.resources[0].spec.template.spec.providerSpec.value }}"
  when: openshift.token is defined

# - debug:
#     msg: "{{ infra_details.json.status.platformStatus.type | lower }}"

# - debug:
#     msg: "{{ existing_machinesets.resources[0] }}"

- name: Azure Machines - Enable Azure MachineSet
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: machine.openshift.io/v1beta1
      kind: MachineSet
      metadata:
        name: "{{ infra_details.json.status.infrastructureName }}{{ '-gpu' if item.gpu else '' }}-worker{{ loop_index }}a-{{ item.location }}1"
        namespace: openshift-machine-api
      spec:
        replicas: 1
        selector:
          matchLabels:
            machine.openshift.io/cluster-api-machineset: "{{ infra_details.json.status.infrastructureName }}{{ '-gpu' if item.gpu else '' }}-worker{{ loop_index }}a-{{ item.location }}1"
            app.kubernetes.io/component: "{{ 'nvidia-driver' if item.gpu else '' }}"
        template:
          metadata:
            labels:
              machine.openshift.io/cluster-api-machineset: "{{ infra_details.json.status.infrastructureName }}{{ '-gpu' if item.gpu else '' }}-worker{{ loop_index }}a-{{ item.location }}1"
              app.kubernetes.io/component: "{{ 'nvidia-driver' if item.gpu else '' }}"
          spec:
            providerSpec:
              value:

                # spotVMOptions: "{{ {} if item.gpu else '' }}"
                acceleratedNetworking: true

                # Other Machine Set Configurations
                kind: "AzureMachineProviderSpec"
                location: "{{ item.location }}"
                osDisk:
                  diskSettings: {}
                  diskSizeGB: 128
                  managedDisk:
                    # Locally Redundant Premium SSDs
                    storageAccountType: Premium_LRS
                  osType: Linux
                
                # GPU Enabled Machine Type
                networkResourceGroup: "{{ existing_machinesets.resources[0].spec.template.spec.providerSpec.value.networkResourceGroup }}"
                vmSize: "{{ 'Standard_NC24s_v2' if item.gpu else 'Standard_D4s_v3' }}"
                image:
                  offer: "{{ provider_spec.image.offer }}"
                  publisher: "{{ provider_spec.image.publisher }}"
                  sku: "{{ provider_spec.image.sku }}"
                  version: "{{ provider_spec.image.version }}"
                subnet: "{{ existing_machinesets.resources[0].spec.template.spec.providerSpec.value.subnet }}"
                vnet: "{{ existing_machinesets.resources[0].spec.template.spec.providerSpec.value.vnet }}"
                zone: "{{ item.zone }}"
  loop: "{{ openshift.machines }}"
  loop_control:
    index_var: loop_index
  when: openshift.machines is defined and 'azure' in infra_details.json.status.platformStatus.type | lower

