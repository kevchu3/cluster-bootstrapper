---

## BOOTSTRAPS VAULT WITH SECRETS
- name: Vault - Wait Namespace Exists
  community.kubernetes.k8s_info:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    kind: Namespace
    name: "vault-server"
  register: namespace_info
  until: namespace_info.resources | length > 0
  retries: 20
  delay: 15

- name: Vault - Generate Secrets for Vault
  template:
    src: "secrets.yaml.j2"
    dest: "manifests/vault/secrets.yaml"

- name: Vault - Create Priming Secrets
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    src: "manifests/vault/secrets.yaml"

- name: Vault - Create Vault Credentials
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: vault-token
        namespace: "vault-server"
      data:
        token: "cm9vdA=="

- name: Vault - Create Admin Vault Credentials
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: vault-token
        namespace: "external-secrets"
      data:
        token: "cm9vdA=="

- name: Vault - Create Vault Credentials
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: external-secrets.io/v1beta1
      kind: SecretStore
      metadata:
        name: vault-backend
        namespace: vault-server
      spec:
        provider:
          vault:
            server: "http://vault-plugin-internal.vault-server.svc.cluster.local:8200"
            path: "secret"
            version: "v2"
            auth:
              tokenSecretRef:
                name: "vault-token"
                key: "token"

- name: Vault - Create Cluster Admin Vault Credentials
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: external-secrets.io/v1beta1
      kind: ClusterSecretStore
      metadata:
        name: eso-admin-secret-store
        namespace: "external-secrets"
      spec:
        conditions: []
          # - namespaces:
          #   - "{{ openshift.services.external_secrets.namespace }}"
          #   - "{{ openshift.services.gitops.namespace }}"
          #   - "cluster-secrets-admin"
          #   - "gitlab-system"
          #   - "backstage"
        provider:
          vault:
            server: "http://vault-plugin-internal.vault-server.svc.cluster.local:8200"
            path: "secret"
            version: "v2"
            auth:
              tokenSecretRef:
                name: "vault-token"
                namespace: "external-secrets"
                key: "token"

- name: Vault - Generate Push Secrets
  template:
    src: "push-secrets.yaml.j2"
    dest: "manifests/vault/push-secrets.yaml"

- name: Vault - Priming Secrets
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    src: "manifests/vault/push-secrets.yaml"

- name: Vault - Push ARGOCD Token
  community.okd.k8s:
    host: "{{ openshift.api_url }}"
    api_key: "{{ openshift.token }}"
    validate_certs: "{{ openshift.validate_certs }}"
    state: "{{ state }}"
    definition:
      apiVersion: external-secrets.io/v1alpha1
      kind: PushSecret
      metadata:
        name: "argocd-secret-priming"
        namespace: "{{ openshift.services.gitops.namespace }}"
      spec:
        deletionPolicy: Delete
        refreshInterval: 10s
        secretStoreRefs:
          - name: eso-admin-secret-store
            kind: ClusterSecretStore
        selector:
          secret:
            name: "openshift-gitops-cluster"
        data:
          - match:
              secretKey: "admin.password"
              remoteRef:
                remoteKey: "argocd"
                property: "ARGOCD_TOKEN"

# - name: Vault - Push CA Cert
#   community.okd.k8s:
#     host: "{{ openshift.api_url }}"
#     api_key: "{{ openshift.token }}"
#     validate_certs: "{{ openshift.validate_certs }}"
#     state: "{{ state }}"
#     definition:
#       apiVersion: external-secrets.io/v1alpha1
#       kind: PushSecret
#       metadata:
#         name: "ca-cert-push"
#         namespace: "openshift-operators"
#       spec:
#         deletionPolicy: Delete
#         refreshInterval: 10s
#         secretStoreRefs:
#           - name: eso-admin-secret-store
#             kind: ClusterSecretStore
#         selector:
#           secret:
#             name: "ca-key-pair"
#         data:
#           - match:
#               secretKey: "ca.key"
#               remoteRef:
#                 remoteKey: "cert"
#                 property: "ca.key"
#           - match:
#               secretKey: "ca.crt"
#               remoteRef:
#                 remoteKey: "cert"
#                 property: "ca.crt"
#           - match:
#               secretKey: "password"
#               remoteRef:
#                 remoteKey: "cert"
#                 property: "password"
